name: MyApp Workflow
on:
  pull_request:
    branches: [ master ]
    paths:
      - 'myapp/src/**'
      - '.github/workflows/myapp-workflow.yaml'
      - 'myapp/Dockerfile'
      - 'deployment'
  push:
    branches: [ master ]
    paths:
      - 'myapp/src/**'
      - '.github/workflows/myapp-workflow.yaml'
      - 'myapp/Dockerfile'
      - 'deployment'

env:
  REGISTRY: docker.io/devozs
  IMAGE: myapp
  GH_TOKEN: ${{ secrets.PAT_HELLO_WORLD }}

jobs:
  app-build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests
        run: |
          cd myapp
          mvn --batch-mode --update-snapshots verify

  docker-build:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - app-build
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Increment Version
        run:  |
          NEXTVERSION=$(echo ${{ vars.TAG }} | awk -F. -v OFS=. '{$NF += 1 ; print}')
          gh variable set TAG --body="${NEXTVERSION}"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: myapp
          file: myapp/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ vars.TAG }}

  docker-run:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - docker-build
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Dokcer pull and run
        run:  |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ vars.TAG }}
          CONTAINER_ID=$(docker run -d -e NAME="Oz" -d ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ vars.TAG }})
          CONTAINER_LOGS=$(docker logs ${CONTAINER_ID})
          echo "Execution Output ${CONTAINER_LOGS}" >> ${GITHUB_STEP_SUMMARY}

  kind-deployment:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - docker-run
    steps:
      - name: Setup Tools
        run:  |
          (cd deployment && ./setup.sh)

      - name: Deployment Script
        run:  |
          (cd deployment && ./deploy.sh -v ${{ vars.TAG }})
